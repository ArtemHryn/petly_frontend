{"version":3,"file":"static/js/9.eb5580ef.chunk.js","mappings":"6MAEaA,EAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,GAAY,YACnD,OACE,SAAC,KAAD,gBACEC,GAAG,UACHC,GAAI,CAAC,GAAI,GAAI,QACbC,GAAI,CAAC,GAAI,GAAI,IACbC,GAAG,YACHC,SAAS,KACLL,GANN,cAQE,SAAC,IAAD,CAAKM,SAAU,CAAC,MAAO,SAAU,WAAYC,EAAE,SAASC,GAAI,CAAC,EAAG,GAAI,GAApE,SACGT,MAIR,C,6GCdYU,EAAUC,EAAAA,GAAAA,GAAH,qMACH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IAGH,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IACC,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,YAAY,EAAxB,IAEP,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,OAAOC,KAAnB,GAERC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,I,wBCbSC,EAAQ,SAAC,GAA4B,IAA1BxB,EAAyB,EAAzBA,SAAaC,GAAY,YAC/C,OAAO,SAACS,GAAD,kBAAaT,GAAb,aAAqBD,IAC7B,C,yOCSYyB,EAAa,WACxB,IAAQC,GAAUC,EAAAA,EAAAA,MAAVD,MACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAkB1B,OAhBAC,EAAAA,EAAAA,YAAU,WACJL,KACFM,EAAAA,EAAAA,GAAa,8CACbC,EAAAA,GAAAA,SAAA,mCAAe,WAAMC,GAAN,iEACU,YAAnBA,EAAQC,QACVX,EAAS,UAFE,2CAAf,wDAMF,IAAMY,EAASd,GAASe,EAAAA,EAAAA,IAAWjB,IAEnC,OAAO,WACLgB,EAAOE,OACR,CACF,GAAE,CAAChB,EAAUI,EAAYF,EAAUJ,KAGlC,UAAC,IAAD,CACEmB,gBAAiB,CAAC,QAAD,OACPC,EADO,qBAEPC,EAFO,qBAGPC,EAHO,OAKjBC,eAAe,UACfC,iBAAiB,YACjBC,mBAAmB,SACnBhD,GAAI,CAAC,GAAI,QAAS,QAClBC,GAAG,IACHgD,QAAQ,OACRC,WAAW,SACXC,eAAe,SAbjB,UAeGnB,IACC,SAAC,IAAD,CAAOoB,gBAAgB,SAAS3C,EAAE,KAAK4C,aAAa,KAApD,SACGrB,KAGL,SAAC,KAAD,MAGL,C","sources":["components/Container/Container.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","pages/VerifyPage/VerifyPage.jsx"],"sourcesContent":["import { Box } from 'components/Box';\n\nexport const Container = ({ children, ...props }) => {\n  return (\n    <Box\n      as=\"section\"\n      pt={[16, 21, '54px']}\n      pb={[22, 22, 24]}\n      bg=\"sectionBG\"\n      flexGrow=\"1\"\n      {...props}\n    >\n      <Box maxWidth={['mob', 'tablet', 'desktop']} m=\"0 auto\" px={[9, 12, 8]}>\n        {children}\n      </Box>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport { space, typography, color, border } from 'styled-system';\n\nexport const TitleEl = styled.h1`\n  font-family: ${p => p.theme.fonts.main};\n  font-style: normal;\n  font-weight: 700;\n  font-size: ${p => p.theme.fontSizes[6]};\n  line-height: ${p => p.theme.lineHeights[4]};\n\n  color: ${p => p.theme.colors.black};\n  text-align: center;\n  ${space}\n  ${typography}\n  ${color}\n  ${border}\n`;\n","import { TitleEl } from './Title.styled';\n\nexport const Title = ({ children, ...props }) => {\n  return <TitleEl {...props}>{children}</TitleEl>;\n};\n","import { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { Container } from 'components/Container/Container';\nimport { verifyUser } from 'redux/auth/auth-operations';\nimport backgroundMobile from 'images/registration/waves_mobile.png';\nimport backgroundTablet from 'images/registration/waves_tablet.png';\nimport backgroundDesktop from 'images/registration/waves_desktop.png';\nimport { Title } from 'components/Title/Title';\nimport { getUserError, getIsVerified } from 'redux/auth/authSelector';\nimport { toastSuccess } from 'helpers/toast-notifications/toasts-notifications';\n\nexport const VerifyPage = () => {\n  const { token } = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isVerified = useSelector(getIsVerified);\n  const error = useSelector(getUserError);\n\n  useEffect(() => {\n    if (isVerified) {\n      toastSuccess('Verification is success, redirect to login');\n      toast.onChange(async payload => {\n        if (payload.status === 'removed') {\n          navigate('/login');\n        }\n      });\n    }\n    const verify = dispatch(verifyUser(token));\n\n    return () => {\n      verify.abort();\n    };\n  }, [dispatch, isVerified, navigate, token]);\n\n  return (\n    <Container\n      backgroundImage={[\n        `url('${backgroundMobile}')`,\n        `url('${backgroundTablet}')`,\n        `url('${backgroundDesktop}')`,\n      ]}\n      backgroundSize=\"contain\"\n      backgroundRepeat=\"no-repeat\"\n      backgroundPosition=\"bottom\"\n      pt={[16, '170px', '46px']}\n      pb=\"0\"\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      {error && (\n        <Title backgroundColor=\"accent\" p=\"10\" borderRadius=\"sm\">\n          {error}\n        </Title>\n      )}\n      <ToastContainer />\n    </Container>\n  );\n};\n"],"names":["Container","children","props","as","pt","pb","bg","flexGrow","maxWidth","m","px","TitleEl","styled","p","theme","fonts","main","fontSizes","lineHeights","colors","black","space","typography","color","border","Title","VerifyPage","token","useParams","dispatch","useDispatch","navigate","useNavigate","isVerified","useSelector","getIsVerified","error","getUserError","useEffect","toastSuccess","toast","payload","status","verify","verifyUser","abort","backgroundImage","backgroundMobile","backgroundTablet","backgroundDesktop","backgroundSize","backgroundRepeat","backgroundPosition","display","alignItems","justifyContent","backgroundColor","borderRadius"],"sourceRoot":""}